<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KubeCF â€“ Project Layout</title>
    <link>https://kubecf.suse.dev/docs/reference/layout/</link>
    <description>Recent content in Project Layout on KubeCF</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://kubecf.suse.dev/docs/reference/layout/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: CF Bump scripts</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/bump/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/bump/</guid>
      <description>
        
        
        

&lt;p&gt;The scripts in directory &lt;strong&gt;dev/cf_deployment/bump&lt;/strong&gt; are used when bumping
the version of the &lt;code&gt;cf-deployment&lt;/code&gt; manifest.&lt;/p&gt;

&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://yq.readthedocs.io/en/latest/&#34; target=&#34;_blank&#34;&gt;yq&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;scripts&#34;&gt;Scripts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;set_release_urls.sh&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;To be run after updating the cf-deployment version to use and
regenerating &lt;code&gt;assets/cf-deployment.yml&lt;/code&gt;, this script regenerates
the &lt;code&gt;assets/operations/set_release_urls.yaml&lt;/code&gt; ops file which
replaces BOSH release locations with references to the equivalent
docker images.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: CF CLI script</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/cfcli/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/cfcli/</guid>
      <description>
        
        
        &lt;p&gt;The &lt;code&gt;cf_cli.sh&lt;/code&gt; script contained in directory &lt;strong&gt;dev/cf_cli&lt;/strong&gt; is a
temporary helper script that creates a pod with the &lt;code&gt;cf-cli&lt;/code&gt;
configured and ready to talk to the Kubecf in the cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Inspection Helpers</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/kube/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/kube/</guid>
      <description>
        
        
        &lt;p&gt;The tools in directory &lt;strong&gt;dev/kube&lt;/strong&gt; help developers inspect kube
clusters and kubecf deployments.&lt;/p&gt;

&lt;p&gt;The scripts and their uses are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;klog.sh&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Run after kubecf is deployed, this script pulls the kube logs from
all containers in all kubecf pods, as well as kubecf log files in
the containers, pod descriptions, events, and resources.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;kube-ready-state-check.sh&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Run before kubecf is deployed, this script inspects the kube
cluster for issues known to impede kubecf deployment.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;pod-status&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Run during or after kubecf is deployed, this script shows a table
of all pods in the deployment and their state. Options exists to
restrict it to a specific namespace and to watch continously.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Kind</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/kind/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/kind/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;deployment-and-teardown&#34;&gt;Deployment and teardown&lt;/h2&gt;

&lt;p&gt;For developing with &lt;a href=&#34;https://github.com/kubernetes-sigs/kind&#34; target=&#34;_blank&#34;&gt;KinD&lt;/a&gt;, start a local cluster by running the &lt;code&gt;start&lt;/code&gt; target:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;bazel run //dev/kind:start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And tear it down via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;bazel run //dev/kind:delete&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: KubeCF</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/kubecf/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/kubecf/</guid>
      <description>
        
        
        &lt;p&gt;The target defined in directory &lt;strong&gt;dev/kubecf&lt;/strong&gt; is used to apply the
rendered Helm template to a Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attention&lt;/strong&gt;: While any files matching the glob pattern
&lt;code&gt;*values.yaml&lt;/code&gt; and found in this directory are ignored by git, they
are used by Bazel to render the SCF chart before applying to the
cluster with kubectl.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Linters</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/linters/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/linters/</guid>
      <description>
        
        
        &lt;p&gt;The directory &lt;strong&gt;dev/linters&lt;/strong&gt; contains tooling to statically check the
sources of kubecf.&lt;/p&gt;

&lt;p&gt;The following linters are available:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;shellcheck.sh&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Runs shellcheck on all &lt;code&gt;.sh&lt;/code&gt; files found in the entire checkout
and reports any issues found.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;yamllint.sh&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Runs yamllint on all &lt;code&gt;.{yaml,yml}&lt;/code&gt; files found in the entire checkout
and reports any issues found.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;helmlint.sh&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Runs &lt;code&gt;helm lint&lt;/code&gt; on the generated &lt;code&gt;kubecf&lt;/code&gt; chart and repos any errors found.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Minikube</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/minikube/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/minikube/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;attention&#34;&gt;Attention&lt;/h2&gt;

&lt;p&gt;Minikube edits the kubernetes configuration file referenced by the
environment variable &lt;code&gt;KUBECONFIG&lt;/code&gt;, or &lt;code&gt;~/.kube/config&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To preserve the original configuration either make a backup of the
relevant file, or change &lt;code&gt;KUBECONFIG&lt;/code&gt; to a different path specific to
the intended deployment.&lt;/p&gt;

&lt;h2 id=&#34;deployment-and-teardown&#34;&gt;Deployment and teardown&lt;/h2&gt;

&lt;p&gt;For developing with Minikube, start a local cluster by running the &lt;code&gt;start&lt;/code&gt; target:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;bazel run //dev/minikube:start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And tear it down again via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;bazel run //dev/minikube:delete&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;managing-system-resources&#34;&gt;Managing system resources&lt;/h2&gt;

&lt;p&gt;The following three environment variables are used by the &lt;code&gt;start&lt;/code&gt;
target to allocate the resources used by the deployed Minikube:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Variable&lt;/th&gt;
&lt;th&gt;Setting&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VM_CPUS&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the number of CPUs Minikube will use.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VM_MEMORY&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the amount of RAM Minikube will be allowed to use.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;code&gt;VM_DISK_SIZE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;the disk size Minikube will be allowed to use.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;E.g.:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#000&#34;&gt;VM_CPUS&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VM_MEMORY&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$((&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1024&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;VM_DISK_SIZE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;180g bazel run //dev/minikube:start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;specifying-a-different-kubernetes-version&#34;&gt;Specifying a different Kubernetes version&lt;/h2&gt;

&lt;p&gt;Set the &lt;code&gt;K8S_VERSION&lt;/code&gt; environment variable to override the default version.&lt;/p&gt;

&lt;h2 id=&#34;vm-drivers&#34;&gt;VM Drivers&lt;/h2&gt;

&lt;p&gt;At the moment, only the VirtualBox and KVM2 drivers are working correctly. Set the &lt;code&gt;VM_DRIVER&lt;/code&gt;
environment variable to override the default. E.g. &lt;code&gt;VM_DRIVER=kvm2&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;extra-minikube-options&#34;&gt;Extra minikube options&lt;/h2&gt;

&lt;p&gt;It is possible to set extra minikube options (e.g. to set a docker registry
mirror) via the environment variable &lt;code&gt;MINIKUBE_EXTRA_OPTIONS&lt;/code&gt;.  For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MINIKUBE_EXTRA_OPTIONS&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;--registry-mirror http://registry.mirror.example:5000/&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Pre-render scripts</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/patches/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/patches/</guid>
      <description>
        
        
        

&lt;p&gt;The directory &lt;strong&gt;bosh/releases/pre_render_scripts&lt;/strong&gt; contains scripts
added to the &lt;code&gt;quarks&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;The structure of this directory is expected to be
&lt;code&gt;&amp;lt;instance_group&amp;gt;/&amp;lt;job&amp;gt;/&amp;lt;type&amp;gt;/&amp;lt;script&amp;gt;&lt;/code&gt;, where &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; is one of&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jobs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bpm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ig_resolver&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This type details the exact location of where the patch executes.&lt;/p&gt;

&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/cloudfoundry-incubator/cf-operator/blob/master/docs/from_bosh_to_kube.md#Pre_render_scripts&#34; target=&#34;_blank&#34;&gt;Pre render scripts&lt;/a&gt; are kubecf&amp;rsquo;s equivalent of its predecessors&amp;rsquo; (SCF
v2) &lt;a href=&#34;https://github.com/SUSE/scf/tree/develop/container-host-files/etc/scf/config/scripts/patches&#34; target=&#34;_blank&#34;&gt;patches&lt;/a&gt; scripts. They, like them, enable developers and
maintainers to apply general patches to the sources of a job
(e.g. configuration templates, script sources, etc.) before that job
was rendered and then executed.&lt;/p&gt;

&lt;p&gt;At the core, the feature allows the user to execute custom scripts
during runtime of the job container for a specific instance_group.&lt;/p&gt;

&lt;h2 id=&#34;machinery&#34;&gt;Machinery&lt;/h2&gt;

&lt;p&gt;The parent and sibling directories (&lt;strong&gt;bosh/releases&lt;/strong&gt; and
&lt;strong&gt;bosh/releases/generators&lt;/strong&gt;) contain supporting code (bazel
machinery) which will automatically convert the script files into the
proper ops files for use by the CF operator, as part of the overall
generation of the kubecf helm chart.&lt;/p&gt;

&lt;p&gt;It is this machinery which depends on the
&lt;code&gt;&amp;lt;instance_group&amp;gt;/&amp;lt;job&amp;gt;/&amp;lt;type&amp;gt;/&amp;lt;script&amp;gt;&lt;/code&gt; structure noted above.&lt;/p&gt;

&lt;h2 id=&#34;attention-dangers&#34;&gt;Attention, Dangers&lt;/h2&gt;

&lt;p&gt;All patch scripts &lt;strong&gt;must be idempotent&lt;/strong&gt;. In other words, it must be
possible to apply them multiple times without error and without
changing the result.&lt;/p&gt;

&lt;p&gt;The existing patch scripts do this by checking if the patch is already
applied before attempting to apply it for real.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Testing</title>
      <link>https://kubecf.suse.dev/docs/reference/layout/testing/</link>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kubecf.suse.dev/docs/reference/layout/testing/</guid>
      <description>
        
        
        &lt;p&gt;The smoke, brain, and acceptance tests can be run after Kubecf
deployment has completed, via:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;bazel run //testing/smoke_tests
bazel run //testing/brain_tests
bazel run //testing/acceptance_tests&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;a href=&#34;tests_cat.md&#34; target=&#34;_blank&#34;&gt;acceptance tests&lt;/a&gt; can be limited to specific suites of interest,
as explained in the linked document.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
